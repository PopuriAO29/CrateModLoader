<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="API_Credit" xml:space="preserve">
    <value>API by NeoKesha, Smartkin, ManDude, BetaM and Marko</value>
  </data>
  <data name="GameTitle" xml:space="preserve">
    <value>Crash Twinsanity</value>
  </data>
  <data name="Mod_CortexDoubleJump" xml:space="preserve">
    <value>Enable Double Jump for Cortex</value>
  </data>
  <data name="Mod_CortexDoubleJumpDesc" xml:space="preserve">
    <value>Let Cortex jump twice by pressing the jump button twice.</value>
  </data>
  <data name="Mod_FlyingKick" xml:space="preserve">
    <value>Enable Flying Kick for Crash</value>
  </data>
  <data name="Mod_FlyingKickDesc" xml:space="preserve">
    <value>Press the jump button and then the slide button to strike the unused Flying Kick move.</value>
  </data>
  <data name="Mod_NinaDoubleJump" xml:space="preserve">
    <value>Enable Double Jump for Nina</value>
  </data>
  <data name="Mod_NinaDoubleJumpDesc" xml:space="preserve">
    <value>Let Nina jump twice by pressing the jump button twice.</value>
  </data>
  <data name="Mod_StompKick" xml:space="preserve">
    <value>Enable Stomp Kick for Crash</value>
  </data>
  <data name="Mod_StompKickDesc" xml:space="preserve">
    <value>Press the jump button and then the slide button to strike the unused Stomp Kick move. It replaces the Flying Kick move.</value>
  </data>
  <data name="Mod_UnusedEnemies" xml:space="preserve">
    <value>Enable Unused Enemies</value>
  </data>
  <data name="Mod_UnusedEnemiesDesc" xml:space="preserve">
    <value>Enables unused enemies in Jungle Bungle and Classroom Chaos.</value>
  </data>
  <data name="Rand_CharParams" xml:space="preserve">
    <value>Randomize Character Parameters</value>
  </data>
  <data name="Rand_CharParamsDesc" xml:space="preserve">
    <value>Randomizes each characters parameters like speed and jump height.</value>
  </data>
  <data name="Rand_Crates" xml:space="preserve">
    <value>Randomize Crates</value>
  </data>
  <data name="Rand_CratesDesc" xml:space="preserve">
    <value>Each individual regular crate's type is randomized.</value>
  </data>
  <data name="Rand_CrateTypes" xml:space="preserve">
    <value>Randomize Crate Types</value>
  </data>
  <data name="Rand_CrateTypesDesc" xml:space="preserve">
    <value>Crate types are shuffled around. (not each individual crate)</value>
  </data>
  <data name="Rand_GemLocations" xml:space="preserve">
    <value>Randomize Gem Locations</value>
  </data>
  <data name="Rand_GemLocationsDesc" xml:space="preserve">
    <value>Hide gems in new fair random locations across the game.  The game is 100% completable and each level has 6 gems as normal, just in different places.</value>
  </data>
  <data name="Rand_Music" xml:space="preserve">
    <value>Randomize Level Music</value>
  </data>
  <data name="Rand_MusicDesc" xml:space="preserve">
    <value>Randomize the music tracks of each level.</value>
  </data>
  <data name="Mod_SwitchCharacters" xml:space="preserve">
    <value>Switch Characters At Will</value>
  </data>
  <data name="Mod_SwitchCharactersDesc" xml:space="preserve">
    <value>Switch between Crash and Cortex when near them using L1/R1 buttons. Use with caution - it's easy to softlock!</value>
  </data>
  <data name="Mod_ClassicCratePersistence" xml:space="preserve">
    <value>Classic Crate Persistence</value>
  </data>
  <data name="Mod_ClassicCratePersistenceDesc" xml:space="preserve">
    <value>Broken crates don't respawn after a death.</value>
  </data>
  <data name="Mod_ClassicExplosionDaamge" xml:space="preserve">
    <value>Classic Explosion Damage</value>
  </data>
  <data name="Mod_ClassicExplosionDamageDesc" xml:space="preserve">
    <value>Explosions only take away a mask.</value>
  </data>
  <data name="Mod_ClassicHealth" xml:space="preserve">
    <value>Classic Health</value>
  </data>
  <data name="Mod_ClassicHealthDesc" xml:space="preserve">
    <value>Spawn without a mask.</value>
  </data>
  <data name="CharFloats_AirGravity" xml:space="preserve">
    <value>Air Gravity</value>
  </data>
  <data name="CharFloats_AirGravityDesc" xml:space="preserve">
    <value>Object gravity while not grounded</value>
  </data>
  <data name="CharFloats_BaseGravity" xml:space="preserve">
    <value>Base Gravity</value>
  </data>
  <data name="CharFloats_BaseGravityDesc" xml:space="preserve">
    <value>Object gravity on the ground</value>
  </data>
  <data name="CharFloats_BodyslamGravityForce" xml:space="preserve">
    <value>Bodyslam Gravity Force</value>
  </data>
  <data name="CharFloats_BodyslamGravityForceDesc" xml:space="preserve">
    <value>How much the bodyslam slams downward after it's done flying upward</value>
  </data>
  <data name="CharFloats_BodyslamHangTime" xml:space="preserve">
    <value>Bodyslam Hang Time</value>
  </data>
  <data name="CharFloats_BodyslamHangTimeDesc" xml:space="preserve">
    <value>Set to 0 to disable bodyslam</value>
  </data>
  <data name="CharFloats_BodyslamUpwardForce" xml:space="preserve">
    <value>Bodyslam Upward Force</value>
  </data>
  <data name="CharFloats_BodyslamUpwardForceDesc" xml:space="preserve">
    <value>How much the bodyslam flies upward after it starts</value>
  </data>
  <data name="CharFloats_CrawlSpeed" xml:space="preserve">
    <value>Crawl Speed</value>
  </data>
  <data name="CharFloats_CrawlSpeedDesc" xml:space="preserve">
    <value>Speed of crawling</value>
  </data>
  <data name="CharFloats_CrawlTimeFromStand" xml:space="preserve">
    <value>Crawl Time From Stand</value>
  </data>
  <data name="CharFloats_CrawlTimeFromStandDesc" xml:space="preserve">
    <value>Time from standing to crouched, Set to 0 to disable crawl from standing</value>
  </data>
  <data name="CharFloats_CrawlTimeToRun" xml:space="preserve">
    <value>Crawl Time To Run</value>
  </data>
  <data name="CharFloats_CrawlTimeToRunDesc" xml:space="preserve">
    <value>Time from crawling to running</value>
  </data>
  <data name="CharFloats_CrawlTimeToStand" xml:space="preserve">
    <value>Crawl Time To Stand</value>
  </data>
  <data name="CharFloats_CrawlTimeToStandDesc" xml:space="preserve">
    <value>Time from crouched to standing</value>
  </data>
  <data name="CharFloats_DoubleJumpArcUnk" xml:space="preserve">
    <value>Double Jump Arc Unknown Value</value>
  </data>
  <data name="CharFloats_DoubleJumpArcUnkDesc" xml:space="preserve">
    <value>Mandatory for double jump to work</value>
  </data>
  <data name="CharFloats_DoubleJumpHeight" xml:space="preserve">
    <value>Double Jump Height</value>
  </data>
  <data name="CharFloats_DoubleJumpHeightDesc" xml:space="preserve">
    <value>Set to 0 to disable double jump, non-zero to enable double jump</value>
  </data>
  <data name="CharFloats_DoubleJumpUnk22" xml:space="preserve">
    <value>Double Jump Unknown Value 22</value>
  </data>
  <data name="CharFloats_DoubleJumpUnk22Desc" xml:space="preserve">
    <value>Mandatory for double jump to work</value>
  </data>
  <data name="CharFloats_FlyingKickForwardSpeed" xml:space="preserve">
    <value>Flying Kick Forward Speed</value>
  </data>
  <data name="CharFloats_FlyingKickForwardSpeedDesc" xml:space="preserve">
    <value>How fast the flying kick is</value>
  </data>
  <data name="CharFloats_FlyingKickGravity" xml:space="preserve">
    <value>Flying Kick Gravity</value>
  </data>
  <data name="CharFloats_FlyingKickGravityDesc" xml:space="preserve">
    <value>Fall gravity after the flying kick ends (only applies when walking off edges for some reason)</value>
  </data>
  <data name="CharFloats_FlyingKickHangTime" xml:space="preserve">
    <value>Flying Kick Hang Time</value>
  </data>
  <data name="CharFloats_FlyingKickHangTimeDesc" xml:space="preserve">
    <value>How long the Flying Kick lasts, Set to 0 to disable flying kick, unused move, replaces bodyslam of the single jump (not double jump)</value>
  </data>
  <data name="CharFloats_GunButtonHoldTimeToStartCharging" xml:space="preserve">
    <value>Gun Button Hold Time To Start Charging</value>
  </data>
  <data name="CharFloats_GunButtonHoldTimeToStartChargingDesc" xml:space="preserve">
    <value>How long should the firing button be held to start charging</value>
  </data>
  <data name="CharFloats_GunChargeTime" xml:space="preserve">
    <value>Gun Charge Time</value>
  </data>
  <data name="CharFloats_GunChargeTimeDesc" xml:space="preserve">
    <value>How long the gun charges the shot</value>
  </data>
  <data name="CharFloats_GunTimeBetweenChargedShots" xml:space="preserve">
    <value>Gun Time Between Charged Shots</value>
  </data>
  <data name="CharFloats_GunTimeBetweenChargedShotsDesc" xml:space="preserve">
    <value>How long until the next charged shot fires while still holding the firing button</value>
  </data>
  <data name="CharFloats_GunTimeBetweenShots" xml:space="preserve">
    <value>Gun Time Between Shots</value>
  </data>
  <data name="CharFloats_GunTimeBetweenShotsDesc" xml:space="preserve">
    <value>How fast can regular shots be fired</value>
  </data>
  <data name="CharFloats_JumpAirSpeed" xml:space="preserve">
    <value>Jump Air Speed</value>
  </data>
  <data name="CharFloats_JumpAirSpeedDesc" xml:space="preserve">
    <value>Speed while in mid-air</value>
  </data>
  <data name="CharFloats_JumpArcUnk18" xml:space="preserve">
    <value>Jump Arc Unknown Value 18</value>
  </data>
  <data name="CharFloats_JumpArcUnk18Desc" xml:space="preserve">
    <value>Jump arc variable</value>
  </data>
  <data name="CharFloats_JumpArcUnk19" xml:space="preserve">
    <value>Jump Arc Unknown Value 19</value>
  </data>
  <data name="CharFloats_JumpArcUnk19Desc" xml:space="preserve">
    <value>Jump arc variable</value>
  </data>
  <data name="CharFloats_JumpEdgeSpeed" xml:space="preserve">
    <value>Jump Edge Speed</value>
  </data>
  <data name="CharFloats_JumpEdgeSpeedDesc" xml:space="preserve">
    <value>Jump speed off of edge (when long jump and flying kick aren't stored)</value>
  </data>
  <data name="CharFloats_JumpHeight" xml:space="preserve">
    <value>Jump Height</value>
  </data>
  <data name="CharFloats_JumpHeightDesc" xml:space="preserve">
    <value>Single jump height</value>
  </data>
  <data name="CharFloats_RadialBlastChargeTime" xml:space="preserve">
    <value>Radial Blast Charge Time</value>
  </data>
  <data name="CharFloats_RadialBlastChargeTimeDesc" xml:space="preserve">
    <value>How long the radial blast charges while in mid-air</value>
  </data>
  <data name="CharFloats_RadialBlastTimeToStart" xml:space="preserve">
    <value>Radial Blast Time To Start</value>
  </data>
  <data name="CharFloats_RadialBlastTimeToStartDesc" xml:space="preserve">
    <value>Set to 0 to disable radial blast, radial blast replaces single jump bodyslam</value>
  </data>
  <data name="CharFloats_RadialBlastUnk39" xml:space="preserve">
    <value>Radial Blast Unknown Value 39</value>
  </data>
  <data name="CharFloats_RadialBlastUnk39Desc" xml:space="preserve">
    <value>Radial blast velocity value</value>
  </data>
  <data name="CharFloats_RadialBlastUnk40" xml:space="preserve">
    <value>Radial Blast Unknown Value 40</value>
  </data>
  <data name="CharFloats_RadialBlastUnk40Desc" xml:space="preserve">
    <value>Radial blast velocity value</value>
  </data>
  <data name="CharFloats_RunSpeed" xml:space="preserve">
    <value>Run Speed</value>
  </data>
  <data name="CharFloats_RunSpeedDesc" xml:space="preserve">
    <value>Runninng speed on the ground</value>
  </data>
  <data name="CharFloats_SlideJumpUnk24" xml:space="preserve">
    <value>Slide Jump Unknown Value 24</value>
  </data>
  <data name="CharFloats_SlideJumpUnk24Desc" xml:space="preserve">
    <value>Slide jump speed</value>
  </data>
  <data name="CharFloats_SlideJumpUnk25" xml:space="preserve">
    <value>Slide Jump Unknown Value 25</value>
  </data>
  <data name="CharFloats_SlideJumpUnk25Desc" xml:space="preserve">
    <value>Slide jump variable</value>
  </data>
  <data name="CharFloats_SlideJumpUnk26" xml:space="preserve">
    <value>Slide Jump Unknown Value 26</value>
  </data>
  <data name="CharFloats_SlideJumpUnk26Desc" xml:space="preserve">
    <value>Slide jump variable</value>
  </data>
  <data name="CharFloats_SlideJumpUnk27" xml:space="preserve">
    <value>Slide Jump Unknown Value 27</value>
  </data>
  <data name="CharFloats_SlideJumpUnk27Desc" xml:space="preserve">
    <value>Slide jump arc variable</value>
  </data>
  <data name="CharFloats_SlideSlowdownTime" xml:space="preserve">
    <value>Slide Slowdown Time</value>
  </data>
  <data name="CharFloats_SlideSlowdownTime2" xml:space="preserve">
    <value>Slide Slowdown Time 2</value>
  </data>
  <data name="CharFloats_SlideSlowdownTime2Desc" xml:space="preserve">
    <value>Slide variable</value>
  </data>
  <data name="CharFloats_SlideSlowdownTime3" xml:space="preserve">
    <value>Slide Slowdown Time 3</value>
  </data>
  <data name="CharFloats_SlideSlowdownTime3Desc" xml:space="preserve">
    <value>Slide variable</value>
  </data>
  <data name="CharFloats_SlideSlowdownTimeDesc" xml:space="preserve">
    <value>Slide variable</value>
  </data>
  <data name="CharFloats_SlideSpeed" xml:space="preserve">
    <value>Slide Speed</value>
  </data>
  <data name="CharFloats_SlideSpeedDesc" xml:space="preserve">
    <value>Set to 0 to disable slide</value>
  </data>
  <data name="CharFloats_SlideUnk49" xml:space="preserve">
    <value>Slide Unknown Value 49</value>
  </data>
  <data name="CharFloats_SlideUnk49Desc" xml:space="preserve">
    <value>Slide variable</value>
  </data>
  <data name="CharFloats_SlideUnk50" xml:space="preserve">
    <value>Slide Unknown Value 50</value>
  </data>
  <data name="CharFloats_SlideUnk50Desc" xml:space="preserve">
    <value>Slide variable</value>
  </data>
  <data name="CharFloats_SpinDelay" xml:space="preserve">
    <value>Spin Delay</value>
  </data>
  <data name="CharFloats_SpinDelayDesc" xml:space="preserve">
    <value>Delay between spins</value>
  </data>
  <data name="CharFloats_SpinLength" xml:space="preserve">
    <value>Spin Length</value>
  </data>
  <data name="CharFloats_SpinLengthDesc" xml:space="preserve">
    <value>Length of spinning time</value>
  </data>
  <data name="CharFloats_SpinThrowForwardForce" xml:space="preserve">
    <value>Spin Throw Forward Force</value>
  </data>
  <data name="CharFloats_SpinThrowForwardForceDesc" xml:space="preserve">
    <value>Forward force after starting a spin throw</value>
  </data>
  <data name="CharFloats_Static1" xml:space="preserve">
    <value>Static Value 1</value>
  </data>
  <data name="CharFloats_Static15" xml:space="preserve">
    <value>Unknown Value 15</value>
  </data>
  <data name="CharFloats_Static15Desc" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="CharFloats_Static1Desc" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="CharFloats_Static6" xml:space="preserve">
    <value>Static Value 6</value>
  </data>
  <data name="CharFloats_Static6Desc" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="CharFloats_StrafingSpeed" xml:space="preserve">
    <value>Strafing Speed</value>
  </data>
  <data name="CharFloats_StrafingSpeedDesc" xml:space="preserve">
    <value>Set to 0 to disable strafing, non-zero to enable strafing</value>
  </data>
  <data name="CharFloats_Unk13" xml:space="preserve">
    <value>Unknown Value 13</value>
  </data>
  <data name="CharFloats_Unk13Desc" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="CharFloats_Unk14" xml:space="preserve">
    <value>Unknown Value 14</value>
  </data>
  <data name="CharFloats_Unk14Desc" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="CharFloats_Unk28" xml:space="preserve">
    <value>Unknown Value 28</value>
  </data>
  <data name="CharFloats_Unk28Desc" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="CharFloats_Unk29" xml:space="preserve">
    <value>Unknown Value 29</value>
  </data>
  <data name="CharFloats_Unk29Desc" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="CharFloats_Unk3" xml:space="preserve">
    <value>Unknown Value 3</value>
  </data>
  <data name="CharFloats_Unk30" xml:space="preserve">
    <value>Unknown Value 30</value>
  </data>
  <data name="CharFloats_Unk30Desc" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="CharFloats_Unk31" xml:space="preserve">
    <value>Unknown Value 31</value>
  </data>
  <data name="CharFloats_Unk31Desc" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="CharFloats_Unk3Desc" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="CharFloats_Unk55" xml:space="preserve">
    <value>Unknown Value 55</value>
  </data>
  <data name="CharFloats_Unk55Desc" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="CharFloats_WalkSpeed" xml:space="preserve">
    <value>Walk Speed</value>
  </data>
  <data name="CharFloats_WalkSpeedDesc" xml:space="preserve">
    <value>Walking speed on the ground</value>
  </data>
  <data name="CharFloats_WalkSpeedPercentage" xml:space="preserve">
    <value>Walk Speed Percentage</value>
  </data>
  <data name="CharFloats_WalkSpeedPercentageDesc" xml:space="preserve">
    <value>Percentage of run speed as integer? Walk-to-run speed scaling?</value>
  </data>
  <data name="CharInts_SpawnHealth" xml:space="preserve">
    <value>Spawn Health</value>
  </data>
  <data name="CharInts_SpawnHealthDesc" xml:space="preserve">
    <value>How much health characters spawn with (1 - no mask, 2 - one mask, 3 - two masks)</value>
  </data>
  <data name="StartingChunk" xml:space="preserve">
    <value>Starting Chunk</value>
  </data>
  <data name="StartingChunkDesc" xml:space="preserve">
    <value>The chunk name that the game starts in (must have a player object or else it will not load)</value>
  </data>
  <data name="UnsafeStartingChunk" xml:space="preserve">
    <value>Starting Chunk (Unsafe)</value>
  </data>
  <data name="UnsafeStartingChunkDesc" xml:space="preserve">
    <value>Allows for a longer starting chunk name at the expense of the game crashing after the credits (due to overwriting the post-credits chunk)</value>
  </data>
  <data name="Mod_GreyscaleWorld" xml:space="preserve">
    <value>Greyscale World</value>
  </data>
  <data name="Mod_GreyscaleWorldDesc" xml:space="preserve">
    <value>The scenery colors are greyed out.</value>
  </data>
  <data name="Mod_UnlockedCamera" xml:space="preserve">
    <value>Unlocked Camera Everywhere</value>
  </data>
  <data name="Mod_UnlockedCameraDesc" xml:space="preserve">
    <value>Disables all camera triggers allowing you to freely control the camera everywhere.</value>
  </data>
  <data name="Mod_UntexturedWorld" xml:space="preserve">
    <value>Untextured World</value>
  </data>
  <data name="Mod_UntexturedWorldDesc" xml:space="preserve">
    <value>The scenery becomes textureless.</value>
  </data>
  <data name="Prop_PantsColor" xml:space="preserve">
    <value>Pants Color</value>
  </data>
  <data name="Prop_PantsColorDesc" xml:space="preserve">
    <value>Modify the color of Crash's pants.</value>
  </data>
  <data name="Rand_PantsColor" xml:space="preserve">
    <value>Randomize Pants Color</value>
  </data>
  <data name="Rand_WorldPalette" xml:space="preserve">
    <value>Randomize World Palette</value>
  </data>
  <data name="Rand_WorldPaletteDesc" xml:space="preserve">
    <value>Swizzle the scenery colors into a random shade.</value>
  </data>
  <data name="Rand_PantsColorDesc" xml:space="preserve">
    <value>Randomize the color of Crash's pants.</value>
  </data>
  <data name="Mod_WumpaIntoCrates" xml:space="preserve">
    <value>All Wumpa Are Random Crates</value>
  </data>
  <data name="Mod_WumpaIntoCratesDesc" xml:space="preserve">
    <value>Turn all wumpa fruit into random crates in each level.</value>
  </data>
  <data name="Rand_SurfaceParams" xml:space="preserve">
    <value>Randomize Surface Parameters</value>
  </data>
  <data name="Rand_SurfaceParamsDesc" xml:space="preserve">
    <value>Randomize the properties of walkable surfaces.</value>
  </data>
  <data name="Rand_WumpaIntoCrates" xml:space="preserve">
    <value>Random Wumpa Are Random Crates</value>
  </data>
  <data name="Rand_WumpaIntoCratesDesc" xml:space="preserve">
    <value>Turn random wumpa fruit into random crates in each level.</value>
  </data>
  <data name="CharFlags_CrawlRotationSpeed" xml:space="preserve">
    <value>Crawl Rotation Speed</value>
  </data>
  <data name="CharFlags_CrawlRotationSpeedDesc" xml:space="preserve">
    <value>Character rotation speed while crawling.</value>
  </data>
  <data name="CharFlags_GroundRotationSpeed" xml:space="preserve">
    <value>Ground Rotation Speed</value>
  </data>
  <data name="CharFlags_GroundRotationSpeedDesc" xml:space="preserve">
    <value>Character rotation speed while walking or running on the ground.</value>
  </data>
  <data name="CharFlags_JumpRotationSpeed" xml:space="preserve">
    <value>Jump Rotation Speed</value>
  </data>
  <data name="CharFlags_JumpRotationSpeedDesc" xml:space="preserve">
    <value>Character rotation speed while jumping.</value>
  </data>
  <data name="CharFlags_SlideJumpRotationSpeed" xml:space="preserve">
    <value>Slide Jump Rotation Speed</value>
  </data>
  <data name="CharFlags_SlideJumpRotationSpeedDesc" xml:space="preserve">
    <value>Character rotation speed while slide jumping.</value>
  </data>
  <data name="CharFlags_Unk1" xml:space="preserve">
    <value>Unknown Parameter 1</value>
  </data>
  <data name="CharFlags_Unk1Desc" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="CharFlags_Unk2" xml:space="preserve">
    <value>Unknown Parameter 2</value>
  </data>
  <data name="CharFlags_Unk2Desc" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="CharFlags_Unk4" xml:space="preserve">
    <value>Unknown Parameter 4</value>
  </data>
  <data name="CharFlags_Unk4Desc" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="CharFlags_Unk6" xml:space="preserve">
    <value>Unknown Parameter 6</value>
  </data>
  <data name="CharFlags_Unk6Desc" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="CharFlags_Unk8" xml:space="preserve">
    <value>Unknown Parameter 8</value>
  </data>
  <data name="CharFlags_Unk8Desc" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="Mod_ClassicSlideJump" xml:space="preserve">
    <value>Classic Slide Jump for Crash</value>
  </data>
  <data name="Mod_ClassicSlideJumpDesc" xml:space="preserve">
    <value>Gives you full control of Crash during his slide jump.</value>
  </data>
  <data name="Mod_GreyscaleDimension" xml:space="preserve">
    <value>Greyscale 10th Dimension</value>
  </data>
  <data name="Mod_GreyscaleDimensionDesc" xml:space="preserve">
    <value>The scenery colors in the 4th Hub's levels are greyed out.</value>
  </data>
  <data name="Mod_SkipCutscenes" xml:space="preserve">
    <value>Skip Cutscenes</value>
  </data>
  <data name="Mod_SkipCutscenesDesc" xml:space="preserve">
    <value>Skips most non-video cutscenes after entering.</value>
  </data>
  <data name="Rand_StartingLevel" xml:space="preserve">
    <value>Randomize Starting Level</value>
  </data>
  <data name="Rand_StartingLevelDesc" xml:space="preserve">
    <value>Randomize the level you start in. After the credits you spawn in the first N.Sanity Island beach.</value>
  </data>
  <data name="CreditsChunk" xml:space="preserve">
    <value>Credits Chunk</value>
  </data>
  <data name="CreditsChunkDesc" xml:space="preserve">
    <value>The chunk name that the game loads after credits (must have a player object or else it will not load)</value>
  </data>
  <data name="Mod_StartAndCreditsSpawn" xml:space="preserve">
    <value>Starting spawn is the credits spawn</value>
  </data>
  <data name="Mod_StartAndCreditsSpawnDesc" xml:space="preserve">
    <value />
  </data>
  <data name="Mod_SwapStartAndCreditsChunk" xml:space="preserve">
    <value>Swap starting and credits spawns</value>
  </data>
  <data name="Mod_SwapStartAndCreditsChunkDesc" xml:space="preserve">
    <value />
  </data>
</root>