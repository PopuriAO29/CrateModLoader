//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrateModLoader.GameSpecific.Crash2 {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Crash2_Text {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Crash2_Text() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CrateModLoader.GameSpecific.Crash2.Crash2_Text", typeof(Crash2_Text).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API by chekwob and ManDude.
        /// </summary>
        internal static string API_Credit {
            get {
                return ResourceManager.GetString("API_Credit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crash Bandicoot 2: Cortex Strikes Back.
        /// </summary>
        internal static string GameTitle {
            get {
                return ResourceManager.GetString("GameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Crates Are Blank.
        /// </summary>
        internal static string Mod_AllCratesBlank {
            get {
                return ResourceManager.GetString("Mod_AllCratesBlank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All regular crates are replaced with Blank ones..
        /// </summary>
        internal static string Mod_AllCratesBlankDesc {
            get {
                return ResourceManager.GetString("Mod_AllCratesBlankDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Crates Are Wumpa.
        /// </summary>
        internal static string Mod_AllCratesWumpa {
            get {
                return ResourceManager.GetString("Mod_AllCratesWumpa", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All regular crates are replaced with Wumpa fruit..
        /// </summary>
        internal static string Mod_AllCratesWumpaDesc {
            get {
                return ResourceManager.GetString("Mod_AllCratesWumpaDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backwards Levels (Beta).
        /// </summary>
        internal static string Mod_BackwardsLevels {
            get {
                return ResourceManager.GetString("Mod_BackwardsLevels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Most levels start at the end and end at the start. There are minimal design changes to ensure levels are beatable. The game is 100% completable. (Jet board levels are onfoot).
        /// </summary>
        internal static string Mod_BackwardsLevelsDesc {
            get {
                return ResourceManager.GetString("Mod_BackwardsLevelsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wider Camera Field-Of-View.
        /// </summary>
        internal static string Mod_CameraWideFOV {
            get {
                return ResourceManager.GetString("Mod_CameraWideFOV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The camera is further away from the player than normal (recommended for Backwards Levels).
        /// </summary>
        internal static string Mod_CameraWideFOVDesc {
            get {
                return ResourceManager.GetString("Mod_CameraWideFOVDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Greyscale World.
        /// </summary>
        internal static string Mod_GreyscaleWorld {
            get {
                return ResourceManager.GetString("Mod_GreyscaleWorld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scenery colors are greyed out..
        /// </summary>
        internal static string Mod_GreyscaleWorldDesc {
            get {
                return ResourceManager.GetString("Mod_GreyscaleWorldDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Untextured World.
        /// </summary>
        internal static string Mod_UntexturedWorld {
            get {
                return ResourceManager.GetString("Mod_UntexturedWorld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scenery&apos;s textures are disabled (only colors remain)..
        /// </summary>
        internal static string Mod_UntexturedWorldDesc {
            get {
                return ResourceManager.GetString("Mod_UntexturedWorldDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random Levels Are Backwards.
        /// </summary>
        internal static string Rand_BackwardsLevels {
            get {
                return ResourceManager.GetString("Rand_BackwardsLevels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any supported level has a random chance of being backwards..
        /// </summary>
        internal static string Rand_BackwardsLevelsDesc {
            get {
                return ResourceManager.GetString("Rand_BackwardsLevelsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Randomize Boss Levels.
        /// </summary>
        internal static string Rand_BossLevels {
            get {
                return ResourceManager.GetString("Rand_BossLevels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boss patterns in 3 levels are randomized. (Ripper Roo/Tiny Tiger/N. Gin).
        /// </summary>
        internal static string Rand_BossLevelsDesc {
            get {
                return ResourceManager.GetString("Rand_BossLevelsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Randomize Camera Field-Of-View.
        /// </summary>
        internal static string Rand_CameraFOV {
            get {
                return ResourceManager.GetString("Rand_CameraFOV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The distance between the camera and the player is randomized..
        /// </summary>
        internal static string Rand_CameraFOVDesc {
            get {
                return ResourceManager.GetString("Rand_CameraFOVDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Randomize Crate Contents.
        /// </summary>
        internal static string Rand_CrateContents {
            get {
                return ResourceManager.GetString("Rand_CrateContents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contents of regular crates are randomized between different amounts of Wumpa, an extra life, and a mask..
        /// </summary>
        internal static string Rand_CrateContentsDesc {
            get {
                return ResourceManager.GetString("Rand_CrateContentsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Randomize Crate Counter.
        /// </summary>
        internal static string Rand_CrateCounter {
            get {
                return ResourceManager.GetString("Rand_CrateCounter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Randomize the number of required crates to break to get a gem in each level. Breaking more crates than required will not grant a gem..
        /// </summary>
        internal static string Rand_CrateCounterDesc {
            get {
                return ResourceManager.GetString("Rand_CrateCounterDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Randomize Sound Effects.
        /// </summary>
        internal static string Rand_SFX {
            get {
                return ResourceManager.GetString("Rand_SFX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sound effects in each level are randomized between each other..
        /// </summary>
        internal static string Rand_SFXDesc {
            get {
                return ResourceManager.GetString("Rand_SFXDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Randomize Warp Room Exits.
        /// </summary>
        internal static string Rand_WarpRoom {
            get {
                return ResourceManager.GetString("Rand_WarpRoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Warp Room exits and the new game spawn are shuffled around..
        /// </summary>
        internal static string Rand_WarpRoomDesc {
            get {
                return ResourceManager.GetString("Rand_WarpRoomDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Randomize World Colors.
        /// </summary>
        internal static string Rand_WorldColors {
            get {
                return ResourceManager.GetString("Rand_WorldColors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scenery colors are randomized in each level..
        /// </summary>
        internal static string Rand_WorldColorsDesc {
            get {
                return ResourceManager.GetString("Rand_WorldColorsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Randomize World Palette.
        /// </summary>
        internal static string Rand_WorldPalette {
            get {
                return ResourceManager.GetString("Rand_WorldPalette", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scenery color palette is randomized in each level..
        /// </summary>
        internal static string Rand_WorldPaletteDesc {
            get {
                return ResourceManager.GetString("Rand_WorldPaletteDesc", resourceCulture);
            }
        }
    }
}
